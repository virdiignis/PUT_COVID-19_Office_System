user nginx apache;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    multi_accept on;
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    server_tokens off;

    charset             utf-8;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   120;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream django {
        server unix:/var/sockets/covid_office.sock;
    }

    server {
       listen 80 default_server;
       return 444;
    }

    server {
	listen 443 ssl;
        server_name _;
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        return       444;
    }


    server {
	    listen      80;
        server_name covid-app-dev.prv.put.poznan.pl;
        return  301 https://$host$request_uri;
    }

    server {
        # the port your site will be served on
        listen      443 ssl http2;
        # the domain name it will serve for
        server_name covid-app-dev.prv.put.poznan.pl;


        client_max_body_size 15M;
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }


        ssl_certificate "/etc/letsencrypt/live/covid-app-dev.prv.put.poznan.pl/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/covid-app-dev.prv.put.poznan.pl/privkey.pem";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout  1d;
        ssl_session_tickets  off;
        ssl_ciphers PROFILE=SYSTEM;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # OCSP Stapling
        ssl_stapling         on;
        ssl_stapling_verify  on;
        resolver             1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
        resolver_timeout     2s;

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;



        location = /robots.txt {
            add_header  Content-Type  text/plain;
            return 200 "User-agent: *\nDisallow: /\n";
        }

        location /media/ {
            internal;
            alias /var/www/covid_office/media/;
        }

        location /static/ {
            alias /var/www/covid_office/static_root; # your Django project's static files - amend as required
            expires 2d;
            access_log off;
            add_header Pragma public;
            add_header Cache-Control "public";
        }


        # Finally, send all non-media requests to the Django server.
        location / {
            uwsgi_pass  django;
            include     /etc/nginx/uwsgi_params; # the uwsgi_params file
        }
    }
}
